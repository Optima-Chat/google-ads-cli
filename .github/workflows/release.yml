name: Release to NPM

on:
  push:
    tags:
      - 'v*'  # 当推送 v* 标签时触发（如 v0.1.1, v0.2.0）

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 需要写权限来创建 GitHub Release
      id-token: write  # NPM provenance

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史，用于生成 changelog

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Run tests (if available)
        run: npm test || echo "No tests configured"
        continue-on-error: true

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          # 获取上一个 tag
          PREVIOUS_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "")

          if [ -z "$PREVIOUS_TAG" ]; then
            # 如果没有上一个 tag，获取最近 20 个 commits
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges -n 20)
          else
            # 获取两个 tag 之间的 commits
            CHANGELOG=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi

          # 保存到文件
          echo "$CHANGELOG" > changelog.txt

          # 输出到 GitHub Actions（处理多行）
          {
            echo "changelog<<EOF"
            echo "$CHANGELOG"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release v${{ steps.get_version.outputs.VERSION }}
          body: |
            ## 🎉 Google Ads CLI v${{ steps.get_version.outputs.VERSION }}

            用自然语言管理 Google Ads 广告投放 - 专为 Claude Code 设计

            ### 📦 安装

            ```bash
            # 全局安装
            npm install -g @optima-chat/google-ads-cli@latest

            # 或使用 npx（无需安装）
            npx @optima-chat/google-ads-cli
            ```

            ### 📝 更新内容

            ${{ steps.changelog.outputs.changelog }}

            ### 🚀 快速开始

            ```bash
            # 初始化配置
            google-ads init

            # OAuth2 登录
            google-ads auth login

            # 查看账号列表
            google-ads account list
            ```

            ### 🔗 链接

            - 📦 [npm 包](https://www.npmjs.com/package/@optima-chat/google-ads-cli/v/${{ steps.get_version.outputs.VERSION }})
            - 📖 [完整文档](https://github.com/Optima-Chat/google-ads-cli#readme)
            - 💡 [使用示例](https://github.com/Optima-Chat/google-ads-cli/blob/main/docs/EXAMPLES.md)
            - 🐛 [报告问题](https://github.com/Optima-Chat/google-ads-cli/issues)

            ---

            🤖 Automated release by GitHub Actions
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
